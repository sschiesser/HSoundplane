////////////////////////////////////////////////////////////////////////////
//
//  This file is part of HSoundplane library
//
//	Works with the following hardware (150415):
//		- Soundplane piezo-driver v0.95 - R003
//		- Soundplane piezo-layer v.095 - R006
//
//  Copyright (c) 2015, www.icst.net
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy of 
//  this software and associated documentation files (the "Software"), to deal in 
//  the Software without restriction, including without limitation the rights to use, 
//  copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the 
//  Software, and to permit persons to whom the Software is furnished to do so, 
//  subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all 
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
//  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
//  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
//  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION 
//  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
//  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// 
#include <SPI.h>
#include <Wire.h>
#include "HSoundplane.h"

struct HSdata HSd;

// Initialize all HSoundplane data...
void HSInit(void) {
	for(uint8_t i = 0; i < HS_SLAVE_NUMBER; i++) {
		// Flags & bit masks for relays and drivers
		HSd.piezoOffAll[i] = false;
		HSd.drvOnAll[i] = false;
		HSd.drvOffAll[i] = false;
		HSd.drvOn[i] = 0;
		HSd.drvOff[i] = 0;
		HSd.drvBm[i] = 0;
		HSd.drvOldBm[i] = 0;
		
		// 
		HSd.i2cSlaveAvailable[i] = false;
		HSd.i2cSlaveSetup[i] = false;
		
		// Input coordinates & output index (+counter)
		for(uint8_t j = 0; j < HS_COORD_MAX; j++) {
			HSd.inputCoord[j][0] = 0;
			HSd.inputCoord[j][1] = 0;
			HSd.outputIndex[i][j] = 0;
		}
		HSd.indexCnt[i] = 0;
	}
<<<<<<< HEAD
	HSd.commandMode = false;
	HSd.colError = false;
	HSd.rawError = false;
}
=======
}
>>>>>>> Byte_parser
